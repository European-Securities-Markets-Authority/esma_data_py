name: esma_data_py package tests

on:
  pull_request_target:
    branches:
        - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        #sudo apt-get install libgeos-dev
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov nbconvert  
<<<<<<< HEAD
        if [ -f requirements.txt ]; then continue; fi
=======
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
>>>>>>> 1a0c1c33bd9876a81d1edfaac1e78204a78539ea
        if [ -f requirements-extra.txt ]; then continue; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --ignore=E722,C901 --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test examples      
      run: |      
        pip install .   
<<<<<<< HEAD
=======
        pip install -r requirements.txt
>>>>>>> 1a0c1c33bd9876a81d1edfaac1e78204a78539ea
        
        # test all notebooks        
        cd docs/examples 
        jupytext --to py *.md
        # run all py files
        # for f in *.py; do python "$f"; done
        cd ../..
    - name: Test with pytest
      run: |
        pytest -v --cov
    #- name: "Upload coverage to Codecov"
    #  uses: codecov/codecov-action@v1
    #  if: github.ref == 'refs/heads/master'
    #  with:
    #    token: ${{ secrets.CODECOV_TOKEN }}
    #    fail_ci_if_error: true
        
   
